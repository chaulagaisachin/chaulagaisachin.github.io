<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Sachin Chaulagai</title>
        <link>https://sachinchaulagai.com.np/posts/</link>
        <description>Recent content in Posts on Sachin Chaulagai</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 01 Mar 2024 14:33:02 +1100</lastBuildDate>
        <atom:link href="https://sachinchaulagai.com.np/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Beginner friendly Hand-on Project on AWS S3 — Part 1</title>
            <link>https://sachinchaulagai.com.np/posts/s3-p1/</link>
            <pubDate>Fri, 01 Mar 2024 14:33:02 +1100</pubDate>
            
            <guid>https://sachinchaulagai.com.np/posts/s3-p1/</guid>
            <description>I want to help beginner gain some confident on their journey in cloud and tech. I will be posting tutorials and lessons on cloud tech and security such that its more understandable and have not burden but fun and easy to comprehend. Let’s start with a service provided by AWS, called Amazon S3.
You ever heard about S3? No! Ever used Google Drive to store your files online? Yes! It’s a primary example of how object storage works.</description>
            <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*7rlT1QToYMlKF5xsTOBHiw.jpeg" alt="intro"></p>
<p>I want to help beginner gain some confident on their journey in cloud and tech. I will be posting tutorials and lessons on cloud tech and security such that its more understandable and have not burden but fun and easy to comprehend. Let’s start with a service provided by AWS, called Amazon S3.</p>
<p>You ever heard about S3? No! Ever used Google Drive to store your files online? Yes! It’s a primary example of how object storage works.</p>
<p>There are tons of ways to store a file in a cloud system. Object storage is one of that way. Don’t panic if you don’t understand what an “Object Storage” is. It&rsquo;s just a techy way of saying that the file will be treated as a distinct unit, that&rsquo;s all you need to know for now.</p>
<p>Okay, so it stores files distinctly. Good. Now you need to know about what a bucket is. What bucket? Don’t push your nerves. Think it of as a container where you store your file. It makes the file more manageable.</p>
<p><strong>Features</strong>:</p>
<ul>
<li>Of course, you can save file in it. Duh. But it’s very fast. In tech world, it has a low latency and high throughput. (Be familiar with these terms, open the dictionary)</li>
<li>Its available up to 99.999999999% of the time in a whole year. Mean, it durable.</li>
<li>Security, you can use policies to manage the access to the files.</li>
<li>Host a static web content through AWS S3.
……….and there any many more features, you will know when you work with it a bit. Let&rsquo;s jump to a simple tutorial.</li>
</ul>
<p><strong>Overview</strong>:</p>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*wWmRrFhVUmmolr4jZpB9qA.png" alt="archi"></p>
<ul>
<li>This is what we are going to do. Create a bucket, upload some files in it, and the files public to share with others. Break it down, make it simple.</li>
</ul>
<p><strong>Creating bucket in AWS</strong>:</p>
<ul>
<li>Go to <a href="https://aws.amazon.com/">https://aws.amazon.com/</a> sign up if you have never had an account. Explore but don’t go too deep into various services, it kind of feels overwhelming.
Search and select S3 services on the panel.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*XcfUk7zlZQ9JbBui3LTv2g.png" alt="1"></p>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*F6f38xXphlHwi-wl9U6aDA.png" alt="2"></p>
<ul>
<li>Select Create bucket and you’ll see a portal to configure your bucket. Make sure you have a unique name for your bucket.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*PI9PG0cT-vDzF2Thciy5nA.png" alt="3"></p>
<ul>
<li>Let any other configuration be as it is. Scroll to the end of the page. Select Create Bucket. You’ll see the following page.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*1Pob7Pj2u89QhSl-5zVk8Q.png" alt="4"></p>
<ul>
<li>
<p>Let’s upload files inside your newly created bucket.</p>
</li>
<li>
<p>Select your newly created bucket and see following page. This is where you can configure everything related to your bucket.</p>
</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*I-5As2y20N9zqxfG7AAm-g.png" alt="5"></p>
<ul>
<li>Select Upload and now you can see different options to Add files and Add Folder. For now, we’ll just add a single file.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*whdeo1v5Q-9ed4aYCwDUGg.png" alt="5"></p>
<ul>
<li>Select your file and upload. I uploaded a file name “friendly-cloud-rat.jpg”.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*kzBzSkjR8P17tyOAJQA-tg.png" alt="6"></p>
<ul>
<li>Upload succeeded.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*jeWq7uyu4nNCVj-4YxCvEg.png" alt="7"></p>
<ul>
<li>You will be able to list all your file inside your bucket. Select the file and “Copy URL” of the file. This URL redirects you to your file inside S3 bucket.
<strong>Extra stuff</strong>: AWS Route53 maps S3 object with a URL</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*DhoqWEuPTaL6WkviyLfjlg.png" alt="8"></p>
<ul>
<li>Open another tab and enter your URL.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*CUKPLZkoq12PYIInRwJVyA.png" alt="9"></p>
<ul>
<li>DAMMMMMMMMMnnnnnnnnnnnnn. Why is it not working? If you are really reading this, comment your thoughts on why didn’t this work? This is just a checkpoint to make sure you are devoted to this tutorial, not just skimming and making yourself feel that you know stuff. I used to do that, that’s not good. “Apply yourself” that’s what I am doing. *a lil pep talk</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*5H8TJOBxn44AqMRQbYxvoQ.png" alt="10"></p>
<ul>
<li>By default, AWS S3 bucket “Block all public access” is turned on. Go to Permissions in your bucket configuration.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*8wBCut3Dxu59Otf4T8xKnw.png" alt="11"></p>
<ul>
<li>Select edit. Read this all if you want, but no worries take it easy.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*3ILk4js7OHIqgUN3KFn5lw.png" alt="12"></p>
<ul>
<li>Turn it all off. Select Save Changes</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*Bggi3uxQ3wyHo0S7YLvYaA.png" alt="13"></p>
<ul>
<li>Confirm bro.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*PZn_Gza3pqm9FXoMNe-0PQ.png" alt="14"></p>
<ul>
<li>TRY AGAIN. Copy Object URL. Go to the link.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*NEx_MimZ-Jbg1QClr_mkLQ.png" alt="15"></p>
<ul>
<li>ughhhhhhhhhhhhhhh. Don’t worry. It&rsquo;s a security stuff, S3 is actually public. However, to access the files inside it, an explicit policy needs to be implemented.</li>
<li>Go to Permissions tab for your bucket. Scroll down to Bucket Policy and select Edit.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*NMI6YiGXTwUxiWfHv4gdcA.png" alt="16"></p>
<ul>
<li>It might get boring here, but this is what it takes to build better stuff.<br>
For now just copy the JSON policy and paste it. Don’t burden too much on any stuff, continue tomorrow if its too much. Take it EASSyyy.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*jbNVWg2nGI0RBL7XVAKz9Q.png" alt="17"></p>
<ul>
<li>Paste the below policy to bucket policy and save it.</li>
</ul>
<p><code>{ &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: &quot;*&quot;, &quot;Action&quot;: &quot;s3:GetObject&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::myunique-aws-s3-bucket/*&quot; } ] }</code></p>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*cJ7sPYaaj6NxLLFSvP0tDQ.png" alt="18"></p>
<ul>
<li>See something different. Copy the object URL and try again.</li>
</ul>
<p><img src="https://miro.medium.com/v2/resize:fit:828/format:webp/1*TpDnCXmVbuprlKWyhGbz2w.png" alt="19"></p>
<ul>
<li>We made it. NOICEEEEEE</li>
</ul>
<p>If you read it till here, thank you and thank yourself for your dedication. If you didn’t understand this, comeback tomorrow and read it again. Comment any questions, there are a lot of student and people even professional who are afraid and nervous about asking question. Don’t worry about anybody else, just comment. Public comments will encourage others to normalize asking question. I’ll be happy to help. Peace.</p>
]]></content>
        </item>
        
        <item>
            <title>What&#39;s IaC (Infrastructure as a Code) ???</title>
            <link>https://sachinchaulagai.com.np/posts/iac/</link>
            <pubDate>Sun, 02 Apr 2023 10:16:10 +0545</pubDate>
            
            <guid>https://sachinchaulagai.com.np/posts/iac/</guid>
            <description>What&amp;rsquo;s IaC (Infrastructure as a Code) ??? Introduction Have you ever setup a virtual machine? You might know about using an ISO file to load in Oracle Virtual Box, going through all the steps on by one to install the ISO on the Virtual Hard-Disk and that&amp;rsquo;s a lot of time being wasted. Well, to save some time you might have backed up you VM (of course Virtual Machine) and used OVA to load your VM.</description>
            <content type="html"><![CDATA[<p>What&rsquo;s IaC (Infrastructure as a Code) ???
<img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*7940BGBj6_soXpc9lqPpng.png" alt="IaC"></p>
<p><strong>Introduction</strong>
Have you ever setup a virtual machine? You might know about using an ISO file to load in Oracle Virtual Box, going through all the steps on by one to install the ISO on the Virtual Hard-Disk and that&rsquo;s a lot of time being wasted. Well, to save some time you might have backed up you VM (of course Virtual Machine) and used OVA to load your VM. Then what about setting hundredzzz of such machine. Ughhhhh, there are many manual steps required to do all these. This is what&rsquo;s called &ldquo;Administrative Overhead&rdquo;.
What if, there is a way to write all the setup instruction in a code and you can execute that code to get your system as you wanted it. With this code, you can even spawn as many machines (infrastructure as you call it) just with some clicks and execution. That&rsquo;s exactly what &ldquo;Infrastructure as a Code&rdquo; does.</p>
<p><strong>Advantages of IAC</strong>
Firstly, the whole infrastructure can be codified which is easily readable rather than looking at each configuration of the system itself.
Previously, you were required to install servers manually that only resulted in administrative overhead, expensive and inconsistency among the systems. IAC will do it with just a few clicks.
The code can be easily copied, edited and distributed among department such as developers and operations that helps in deploying, provisioning, monitoring and managing large infrastructure.
It can help deploy application&rsquo;s required servers, networks, databases, and other such infrastructure aligned with business policies consistently.</p>
<p><strong>Potential Disssad</strong>
Infrastructure code should be audited properly before deploying as it can result in various security vulnerabilities. Similarly, secure storage of IaC must be done to avoid its theft or tampering with code. This single code contains the whole blueprint of your infrastructure which should always be kept confidential. ALWAYSSSS.
You might require learning other IAC tools that can be complex in the beginning but can create a learning curve but that&rsquo;s the way of life.
These codes should be version controlled and any issue with such code in deployment process could result in increasing in downtime of systems and application and nobody wants that for sure.</p>
<p><strong>Tools for IAC</strong></p>
<p><strong>Terraform</strong>: Terraform is an open-source infrastructure as code (IaC) tool that allows you to automate the provisioning, configuration, and management of cloud-based or on-premises infrastructure resources.
HashiCorp TerraformIt provides a way to define, deploy, and manage infrastructure resources declaratively using configuration files, called Terraform files, which are written in a high-level, human-readable domain-specific language (DSL).
<img src="https://miro.medium.com/v2/resize:fit:720/format:webp/0*GXXoXgrWG92Yslni.png" alt="hashicorp"></p>
<p><strong>IaC in Action</strong></p>
<p>Let&rsquo;s say you want to create an Amazon Web Services (AWS) Elastic Compute Cloud (EC2), that&rsquo;s just a fancy name for Virtual Machine, using Terraform. Here&rsquo;s what the Terraform configuration file might look like:
<img src="https://miro.medium.com/v2/resize:fit:640/format:webp/1*MtKUCr_8_VPm4B_SQ63XWA.png" alt="terraform-example"></p>
<p>In this example, the provider block specifies that we&rsquo;re using AWS as the cloud provider, and that we want to create the resources in the us-west-2 region.
The resource block defines the actual resource we want to create, which is an EC2 instance. We give it a name (example) and specify the Amazon Machine Image (AMI) we want to use (ami-0c55b159cbfafe1f0), as well as the instance type (t2.micro). We also add a tag to give it a name (Name = &ldquo;example-instance&rdquo;).
To create the EC2 instance, we would run the following command:
terraform apply
This command tells Terraform to read the configuration file, compare it to the current state of the infrastructure, and make any necessary changes to bring the infrastructure into the desired state. In this case, Terraform would create a new EC2 instance in the AWS account specified in the configuration file.
If we wanted to destroy the EC2 instance, we could run the following command:
terraform destroy</p>
<p><strong>Summary</strong>:
Use IaC for smart work. peaceeeeee</p>
]]></content>
        </item>
        
        <item>
            <title></title>
            <link>https://sachinchaulagai.com.np/posts/how-dns-works/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>https://sachinchaulagai.com.np/posts/how-dns-works/</guid>
            <description></description>
            <content type="html"><![CDATA[]]></content>
        </item>
        
    </channel>
</rss>
